gateway:
  frontend:
    http:
      host: "0.0.0.0"
      port: 8080
      readTimeout: 30
      writeTimeout: 30
  backend:
    http:
      maxIdleConns: 100
      maxIdleConnsPerHost: 10
      idleConnTimeout: 90
      keepAlive: true
      keepAliveTimeout: 30
      dialTimeout: 10
      responseHeaderTimeout: 10
  registry:
    type: static
    static:
      services:
        - name: example-service
          instances:
            - id: example-1
              address: "127.0.0.1"
              port: 3000
              health: healthy
            - id: example-2
              address: "127.0.0.1"
              port: 3001
              health: healthy
  router:
    rules:
      - id: example-route
        path: /api/example/*
        serviceName: example-service
        loadBalance: round_robin
        timeout: 10
      - id: public-route
        path: /public/*
        serviceName: example-service
        loadBalance: round_robin
        timeout: 10
  auth:
    required: true
    providers:
      - jwt
      - apikey
    skipPaths:
      - /public/
      - /health
    requiredScopes:
      - api:read
    jwt:
      enabled: true
      issuer: "https://auth.example.com"
      audience:
        - "https://api.example.com"
      signingMethod: "RS256"
      publicKey: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0Z3VS5JJcds6xfn/tZAo
        DdDqA9kBE2uPDnlfP+ViXeFWv4zcYzUVlPkCs1/8kA/hYLmZQC5JqupG0efveBMA
        TcVURAsqh7FTgVuDOLHnknUWJGvL3U6p6lzjMdv9t+M/mr7g+wO+7tg5QNGHqMZZ
        CHB7UgIBSeKr0k8K8wVzXfTZmHMh2L+B70jGgQC3DpKYwqrVdBTB5gvCVGipnGFs
        1Ztyc/kFf6SfEBM7GMCB1be4bPmefU/BdFqEPdAAxmVRMhh/fCNi5HG1BZU5VP6h
        wGb7qrOlCtrYvkykRFLRJLMh4QUkQ7iC6x6NUibyg7LBzuTKlCK6jTEhBBiBVvKF
        OQIDAQAB
        -----END PUBLIC KEY-----
      headerName: "Authorization"
      scopeClaim: "scope"
      subjectClaim: "sub"
    apikey:
      enabled: true
      hashKeys: true
      defaultScopes:
        - api:read
      headerName: "X-API-Key"
      keys:
        # API keys should be loaded from environment variables or secrets management
        # Example configuration:
        # service-key-1:
        #   key: "${SERVICE_KEY_1_HASH}"  # Load from environment variable
        #   subject: "test-service"
        #   type: "service"
        #   scopes:
        #     - api:write
        #     - api:admin
        # user-key-1:
        #   key: "${USER_KEY_1_HASH}"  # Load from environment variable
        #   subject: "john.doe@example.com"
        #   type: "user"
        #   scopes:
        #     - api:read
        # 
        # To generate a SHA256 hash for an API key:
        # echo -n "your-api-key" | sha256sum
        # 
        # Never commit actual keys or hashes to version control!